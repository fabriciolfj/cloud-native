server:
  port: 9002
  netty:
    connection-timeout: 5s
  shutdown: graceful
spring:
  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411/}
  sleuth:
    sampler:
      probability: 1.0
  application:
    name: order-service
  cloud:
    function:
      definition: dispatchOrder
    stream:
      bindings:
        dispatchOrder-in-0:
          destination: order-dispatched
          contentType: application/json
          group: polar-updater
      rabbit:
        bindings:
          order-accepted:
            producer:
              transacted: true
  rabbitmq:
    host: localhost
    password: password
    username: user
    connection-timeout: 15s
  r2dbc:
    username: admin
    password: admin
    url: r2dbc:postgresql://localhost:5433/polardb_order
    pool:
      max-create-connection-time: 5s
      initial-size: 5
      max-size: 10
  lifecycle:
    timeout-per-shutdown-phase: 15s
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5433/polardb_order
management:
  endpoints:
    web:
      exposure:
        include: health, heapdump, info, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


polar:
  catalog-service-url: http://localhost:9001/books/
